type User {
  id: ID! @id
  avatar: String
  username: String! @unique
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String
  bio: String
  followers: [User!]! @relation(name: "FollowReation")
  following: [User!]! @relation(name: "FollowReation")
  posts: [Post!]! @realtion(name: "PostsOfUser", onDelete: CASCADE) 
  likes: [Like!]! @realtion(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @realtion(name: "CommentsOfUser", onDelete: CASCADE)
  rooms: [Room!]!
  loginSecret: String
}

type Post {
  id: ID! @id
  location: String
  caption: String!
  user: User! @realtion(name: "PostsOfUser")
  files: [File!]! @relation(name: "FilesOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfPost", onDelete: CASCADE)
}

type Like {
  id: ID! @id
  user: User @realtion(name: "LikesOfUser")
  post: Post @relation(name: "LikesOfPost")
}

type Comment {
  id: ID! @id
  text: String!
  user: User @realtion(name: "CommentsOfUser")
  post: Post @relation(name: "CommentsOfPost")
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
}

type Message {
  id: ID! @id
  text: String! 
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
}